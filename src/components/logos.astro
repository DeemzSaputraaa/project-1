---
// @ts-ignore
import { Icon } from "astro-icon/components";
---

<style>
  .partnership-slider {
    display: flex;
    animation: slide 20s linear infinite;
  }

  .partnership-slider.paused {
    animation-play-state: paused;
  }

  @keyframes slide {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }
</style>

<div class="bg-textJudul text-white py-6 overflow-hidden">
  <div class="mt-0 max-w-screen-xl mx-auto py-2">
    <h2
      class="text-2xl lg:text-3xl text-center font-bold lg:tracking-tight pb-7">
      Partnership
    </h2>
    <div class="relative w-full">
      <div class="partnership-slider-wrapper overflow-hidden">
        <div class="partnership-slider flex items-center justify-start">
          <!-- Icon List -->
          <div class="flex gap-8 md:gap-20">
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:linux"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:react"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:svelte"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:astro"
            />
            <Icon
              class="size-8 md:size-16 flex-shrink-0"
              name="simple-icons:tailwindcss"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:vercel"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:github"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:laragon"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:postgresql"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:gitlab"
            />
            <!-- Duplicate the icons for seamless looping -->
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:linux"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:react"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:svelte"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:astro"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:github"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:vercel"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:github"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:laragon"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:postgresql"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:gitlab"
            />
            <Icon
              class="size-8 md:size-12 flex-shrink-0"
              name="simple-icons:github"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  import { onMount } from "solid-js";

  onMount(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("animate");
          } else {
            entry.target.classList.remove("animate");
          }
        });
      },
      { threshold: 0.1 }
    );

    document.querySelectorAll(".partnership-slider").forEach((element) => {
      observer.observe(element);
    });

    document
      .querySelectorAll(
        ".partnership-slider .size-8, .partnership-slider .size-12, .partnership-slider .size-16"
      )
      .forEach((icon) => {
        icon.addEventListener("mouseenter", () => {
          const slider = document.querySelector(".partnership-slider");
          if (slider) {
            slider.classList.add("paused");
          }
        });
        icon.addEventListener("mouseleave", () => {
          const slider = document.querySelector(".partnership-slider");
          if (slider) {
            slider.classList.remove("paused");
          }
        });
      });
  });
</script>

<style>
  .partnership-slider {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.5s ease-out,
      transform 0.5s ease-out;
  }

  .partnership-slider.animate {
    opacity: 1;
    transform: translateY(0);
  }
</style>
